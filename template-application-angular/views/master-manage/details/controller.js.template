#set($dollar = '$' )
angular.module('page', []);
angular.module('page')
.factory('$messageHub', [function(){
	var messageHub = new FramesMessageHub();

	var message = function(evtName, data){
		messageHub.post({data: data}, '${launchpadName}.${projectName}.${name}.' + evtName);
	};

	var on = function(topic, callback){
		messageHub.subscribe(callback, topic);
	};

	return {
		message: message,
		on: on,
		onEntityRefresh: function(callback) {
			on('${launchpadName}.${projectName}.${name}.refresh', callback);
		},
#foreach ($property in $properties)
#if($property.widgetType == "DROPDOWN" && $property.relationshipEntityName)
		on${property.relationshipEntityName}Modified: function(callback) {
			on('${launchpadName}.${projectName}.${property.relationshipEntityName}.modified', callback);
		},
#end
#end
#foreach ($property in $properties)
#if($property.relationshipType == "COMPOSITION" && $property.relationshipCardinality == "1_n")
		on${property.relationshipEntityName}Selected: function(callback) {
			on('${launchpadName}.${projectName}.${property.relationshipEntityName}.selected', callback);
		},
#end
#end
		messageEntityModified: function() {
			message('modified');
		}
	};
}])
.controller('PageController', function ($scope, $http, $messageHub) {

	var api = '/services/v3/js/${projectName}/api/${name}.js';
#foreach ($property in $properties)
#if($property.widgetType == "DROPDOWN")
#if($property.widgetService)
	var ${property.name.toLowerCase()}OptionsApi = '${property.widgetService}';
#else
	var ${property.name.toLowerCase()}OptionsApi = '/services/v3/js/${projectName}/api/${property.relationshipEntityName}.js';
#end
#end
#end
#foreach ($property in $properties)
#if($property.widgetType == "DROPDOWN")

	$scope.${property.name.toLowerCase()}Options = [];
#end
#end
#foreach ($property in $properties)
#if($property.widgetType == "DROPDOWN")

	function ${property.name.toLowerCase()}OptionsLoad() {
		${dollar}http.get(${property.name.toLowerCase()}OptionsApi)
		.success(function(data) {
			$scope.${property.name.toLowerCase()}Options = data;
		});
	}
	${property.name.toLowerCase()}OptionsLoad();
#end
#end

	function load() {
		${dollar}http.get(api + '?#foreach ($property in $properties)#if($property.relationshipType == "COMPOSITION" && $property.relationshipCardinality == "1_n")${property.name}#end#end=' + $scope.masterEntityId)
		.success(function(data) {
			$scope.data = data;
		});
	}

	$scope.openNewDialog = function() {
		$scope.actionType = 'new';
		$scope.entity = {};
		toggleEntityModal();
	};

	$scope.openEditDialog = function(entity) {
		$scope.actionType = 'update';
		$scope.entity = entity;
		toggleEntityModal();
	};

	$scope.openDeleteDialog = function(entity) {
		$scope.actionType = 'delete';
		$scope.entity = entity;
		toggleEntityModal();
	};

	$scope.close = function() {
		load();
		toggleEntityModal();
	};

	$scope.create = function() {
#foreach ($property in $properties)
#if($property.relationshipType == "COMPOSITION" && $property.relationshipCardinality == "1_n")
		${dollar}scope.entity.$property.name = $scope.masterEntityId;
#end
#end
		${dollar}http.post(api, JSON.stringify(${dollar}scope.entity))
		.success(function(data) {
			load();
			toggleEntityModal();
			$messageHub.messageEntityModified();
		}).error(function(data) {
			alert(JSON.stringify(data));
		});
			
	};

	$scope.update = function() {
#foreach ($property in $properties)
#if($property.relationshipType == "COMPOSITION" && $property.relationshipCardinality == "1_n")
		${dollar}scope.entity.$property.name = $scope.masterEntityId;
#end
#end

#foreach ($property in $properties)
#if($property.dataPrimaryKey)
		${dollar}http.put(api + '/' + ${dollar}scope.entity.${property.name}, JSON.stringify(${dollar}scope.entity))
#end
#end

		.success(function(data) {
			load();
			toggleEntityModal();
			$messageHub.messageEntityModified();
		}).error(function(data) {
			alert(JSON.stringify(data));
		})
	};

	$scope.delete = function() {
#foreach ($property in $properties)
#if($property.dataPrimaryKey)
		${dollar}http.delete(api + '/' + ${dollar}scope.entity.${property.name})
#end
#end
		.success(function(data) {
			load();
			toggleEntityModal();
			$messageHub.messageEntityModified();
		}).error(function(data) {
			alert(JSON.stringify(data));
		});
	};

#foreach ($property in $properties)
#if($property.widgetType == "DROPDOWN")
	${dollar}scope.${property.name.toLowerCase()}OptionValue = function(optionKey) {
		for (var i = 0 ; i < ${dollar}scope.${property.name.toLowerCase()}Options.length; i ++) {
			if (${dollar}scope.${property.name.toLowerCase()}Options[i].${property.widgetDropDownKey} === optionKey) {
				return ${dollar}scope.${property.name.toLowerCase()}Options[i].${property.widgetDropDownValue};
			}
		}
		return null;
	};
#end
#end

	$messageHub.onEntityRefresh(load);
#foreach ($property in $properties)
#if($property.widgetType == "DROPDOWN" && $property.relationshipEntityName)
	${dollar}messageHub.on${property.relationshipEntityName}Modified(${property.name.toLowerCase()}OptionsLoad);
#end
#end

#foreach ($property in $properties)
#if($property.relationshipType == "COMPOSITION" && $property.relationshipCardinality == "1_n")
	${dollar}messageHub.on${property.relationshipEntityName}Selected(function(event) {
		$scope.masterEntityId = event.data.id
		load();
	});
#end
#end

	function toggleEntityModal() {
		$('#entityModal').modal('toggle');
	}
});