#if($dataCount)
var query = require("db/v4/query");
#end
var producer = require("messaging/v4/producer");
var daoApi = require("db/v4/dao");
#set($isEntityUtilsEnabled = "false")
#foreach ($property in $properties)
#if($property.dataType == "DATE")
#set($isEntityUtilsEnabled = "true")
#break
#end
#end
#if($isEntityUtilsEnabled == "true")
var EntityUtils = require("${projectName}/data/utils/EntityUtils");
#end

var dao = daoApi.create({
	table: "${dataName}",
	properties: [
#foreach ($property in $properties)
#if($foreach.isFirst())
		{
#else
 {
#end
			name: "${property.name}",
			column: "${property.dataName}",
			type: "${property.dataType}",
#if($property.dataPrimaryKey)
			id: true,
#end
#if($property.dataNotNull)
			required: true
#end
		}#if($foreach.hasNext),#end
#end
]
});

exports.list = function(settings) {
#if($isEntityUtilsEnabled == "true")
	return dao.list(settings).map(function(e) {
#foreach ($property in $properties)
#if($property.dataType == "DATE")
		EntityUtils.setLocalDate(e, "${property.name}");
#end
#if($property.dataType == "BOOLEAN")
		EntityUtils.setBoolean(e, "${property.name}");
#end
#end
		return e;
	});
#else
	return dao.list(settings);
#end
};
#if($type != "REPORT")

exports.get = function(id) {
#if($isEntityUtilsEnabled == "true")
	var entity = dao.find(id);
#foreach ($property in $properties)
#if($property.dataType == "DATE")
	EntityUtils.setLocalDate(entity, "${property.name}");
#end
#if($property.dataType == "BOOLEAN")
	EntityUtils.setBoolean(entity, "${property.name}");
#end
#end
	return entity;
#else
	return dao.find(id);
#end
};

exports.create = function(entity) {
#if($isEntityUtilsEnabled == "true")
#foreach ($property in $properties)
#if($property.dataType == "DATE")
	EntityUtils.setLocalDate(entity, "${property.name}");
#end
#if($property.dataType == "BOOLEAN")
	EntityUtils.setBoolean(entity, "${property.name}");
#end
#end
#end
	var id = dao.insert(entity);
	triggerEvent("Create", {
		table: "${dataName}",
		key: {
#foreach ($property in $properties)
#if($property.dataPrimaryKey)
			name: "${property.name}",
			column: "${property.dataName}",
			value: id
#end
#end
		}
	});
	return id;
};

exports.update = function(entity) {
#if($isEntityUtilsEnabled == "true")
#foreach ($property in $properties)
#if($property.dataType == "DATE")
	EntityUtils.setLocalDate(entity, "${property.name}");
#end
#if($property.dataType == "BOOLEAN")
	EntityUtils.setBoolean(entity, "${property.name}");
#end
#end
#end
	dao.update(entity);
	triggerEvent("Update", {
		table: "${dataName}",
		key: {
#foreach ($property in $properties)
#if($property.dataPrimaryKey)
			name: "${property.name}",
			column: "${property.dataName}",
			value: entity.${property.name}
#end
#end
		}
	});
};

exports.delete = function(id) {
	dao.remove(id);
	triggerEvent("Delete", {
		table: "${dataName}",
		key: {
#foreach ($property in $properties)
#if($property.dataPrimaryKey)
			name: "${property.name}",
			column: "${property.dataName}",
			value: id
#end
#end
		}
	});
};
#end

exports.count = function() {
	return dao.count();
};

exports.customDataCount = function() {
#if($dataCount)
	var resultSet = query.execute("${dataCount}");
	if (resultSet !== null && resultSet[0] !== null) {
		if (resultSet[0].COUNT !== undefined && resultSet[0].COUNT !== null) {
			return resultSet[0].COUNT;
		} else if (resultSet[0].count !== undefined && resultSet[0].count !== null) {
			return resultSet[0].count;
		}
	}
	return 0;
#else
	return dao.count();
#end
};

function triggerEvent(operation, data) {
	producer.queue("${projectName}/${perspectiveName}/${name}/" + operation).send(JSON.stringify(data));
}